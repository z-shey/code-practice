{
 "cells": [
  {
   "cell_type": "markdown",
   "source": [
    "在Python中，常见的数据类型包括：\n",
    "1. 整型（int）：表示整数，如1，-5，100等。\n",
    "2. 浮点型（float）：表示带有小数部分的数字，如3.14，-0.5等。\n",
    "3. 字符串（str）：表示一串字符，可以使用单引号或双引号括起来，如\"hello\"，'world'等。\n",
    "4. 布尔型（bool）：表示真（True）或假（False）的值。\n",
    "5. 列表（list）：表示一组有序的元素，可以包含不同类型的数据，用方括号括起来，如[1, 2, 3]，['a', 'b', 'c']等。\n",
    "6. 元组（tuple）：类似于列表，但是元素不可修改，用圆括号括起来，如(1, 2, 3)，('a', 'b', 'c')等。\n",
    "7. 集合（set）：表示一组无序且唯一的元素，用大括号括起来，如{1, 2, 3}，{'a', 'b', 'c'}等。\n",
    "8. 字典（dict）：表示一组键值对的集合，用大括号括起来，如{'name': 'Alice', 'age': 20}等。"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "d63160a6c8795a02"
  },
  {
   "cell_type": "markdown",
   "source": [
    "## int 整型"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "27b2a01254ee0078"
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'int'>\n"
     ]
    }
   ],
   "source": [
    "age = 10\n",
    "print(type(age))"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.173841500Z",
     "start_time": "2023-12-09T15:50:50.981483800Z"
    }
   },
   "id": "92dfe24c2a2bd77b"
  },
  {
   "cell_type": "markdown",
   "source": [
    "## float 浮点型"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "92d618e9806787a9"
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'float'>\n"
     ]
    }
   ],
   "source": [
    "price = 30.50\n",
    "print(type(price))"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.227660500Z",
     "start_time": "2023-12-09T15:50:51.176831Z"
    }
   },
   "id": "ee7e84ff6d3101e4"
  },
  {
   "cell_type": "markdown",
   "source": [
    "## 数字类型一般有运算和判断大小"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "923823642f10707c"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 运算"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "348ec85013f85f70"
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "65\n"
     ]
    }
   ],
   "source": [
    "a = 5\n",
    "b = 60\n",
    "print(a + b)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.274506500Z",
     "start_time": "2023-12-09T15:50:51.213708Z"
    }
   },
   "id": "f91d3dfbbf2a76d1"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 比较大小"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "cb9a5ebc7fa7c966"
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n"
     ]
    }
   ],
   "source": [
    "c = 70\n",
    "d = 80\n",
    "print(c > d)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.311380600Z",
     "start_time": "2023-12-09T15:50:51.277494800Z"
    }
   },
   "id": "9b5b0d7079aa316c"
  },
  {
   "cell_type": "markdown",
   "source": [
    "## 字符串"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "83cc399b07a4c3f9"
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "outputs": [],
   "source": [
    "name = \"Shey Chang\""
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.368190900Z",
     "start_time": "2023-12-09T15:50:51.312377600Z"
    }
   },
   "id": "b429c7b6190715eb"
  },
  {
   "cell_type": "markdown",
   "source": [
    "在Python中定义字符串可以有不同的方式，单引号，双引号，多引号等，都是可以的"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "7a11dcc7d78f0ba0"
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "outputs": [],
   "source": [
    "name_1 = 'Shey Chang'\n",
    "name_2 = \"Shey Chang\"\n",
    "name_3 = '''Shey Chang'''\n",
    "name_4 = \"\"\"Shey Chang\"\"\""
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.372177Z",
     "start_time": "2023-12-09T15:50:51.355235100Z"
    }
   },
   "id": "68a103812bd36e31"
  },
  {
   "cell_type": "markdown",
   "source": [
    "字符串也是可以相加相乘运算的"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "c70f6730c09a9eb9"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 相乘"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "406db0ba0303048d"
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SheySheyShey\n"
     ]
    }
   ],
   "source": [
    "e = \"Shey\"\n",
    "print(e * 3)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.421012800Z",
     "start_time": "2023-12-09T15:50:51.375167400Z"
    }
   },
   "id": "10acd155db58424"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 相加"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "50ed503a0813a6bf"
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shey Hello\n"
     ]
    }
   ],
   "source": [
    "f = \"Shey\"\n",
    "print(f + \" Hello\")"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.425001100Z",
     "start_time": "2023-12-09T15:50:51.393107700Z"
    }
   },
   "id": "7683b4c0d8a3b2f7"
  },
  {
   "cell_type": "markdown",
   "source": [
    "注意与 Java 是不一样的，只能同类型之间相加，和 Java 字符串与数字相加成为字符串是不一样的\n",
    "Error: `print(\"hello\" + 3)`"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "700d1bdc51193ae3"
  },
  {
   "cell_type": "markdown",
   "source": [
    "## 布尔值"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "b6ece2caafc291c2"
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True <class 'bool'>\n"
     ]
    }
   ],
   "source": [
    "boolean_true = True\n",
    "print(boolean_true, type(boolean_true))"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.495764300Z",
     "start_time": "2023-12-09T15:50:51.428988400Z"
    }
   },
   "id": "7cd19f59c588e9b"
  },
  {
   "cell_type": "markdown",
   "source": [
    "## 列表\n",
    "\n",
    "当我们想要使用一个变量来储存对个数据的时候，就可以使用列表。Python 中的列表（List）是一种动态数组，可以存储任意类型的对象，例如数字、字符串、元组等。"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "4648a8ceec809a8a"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 列表的定义：在 Python 中，可以使用方括号 [] 或者 list() 函数来定义一个列表。"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "e98d2afd12acbb06"
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 2, 3, 4, 5]\n",
      "['a', 'b', 'c', 'd', 'e']\n"
     ]
    }
   ],
   "source": [
    "# 方括号 [] 定义\n",
    "list_1 = [1, 2, 3, 4, 5]\n",
    "list_2 = ['a', 'b', 'c', 'd', 'e']\n",
    "\n",
    "print(list_1)\n",
    "print(list_2)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.531644700Z",
     "start_time": "2023-12-09T15:50:51.483804900Z"
    }
   },
   "id": "378266177ccfd512"
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10, 'Hello', 3.14]\n"
     ]
    }
   ],
   "source": [
    "#  list() 函数定义\n",
    "list_3 = list()  # 定义一个空列表，使用 append() 方法向列表末尾添加新的元素\n",
    "\n",
    "# 添加元素到列表\n",
    "list_3.append(10)\n",
    "list_3.append(\"Hello\")\n",
    "list_3.append(3.14)\n",
    "\n",
    "print(list_3)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.602407900Z",
     "start_time": "2023-12-09T15:50:51.535633700Z"
    }
   },
   "id": "4d0843f09e0f2216"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 列表的访问：通过索引来访问列表中的元素,索引从 0 开始，索引也可以使用负数，-1 表示列表的最后一个元素，-2 表示列表的倒数"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "b35484077a64a92c"
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "a\n",
      "b\n"
     ]
    }
   ],
   "source": [
    "list_4 = ['a', 'b', 'c', 'd', 'e']\n",
    "\n",
    "print(list_4[0])\n",
    "print(list_4[1])"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.607391500Z",
     "start_time": "2023-12-09T15:50:51.556562600Z"
    }
   },
   "id": "ebaae929fe58acc7"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 添加列表元素："
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "538a97c5f393f6ee"
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['a', 'b', 'c', 'd', 'e', 'f']\n",
      "['a', 5, 'b', 'c', 'd', 'e', 'f']\n",
      "['a', 5, 'b', 'c', 'd', 'e', 'f', 4, 5]\n",
      "['a', 5, 'b', 'c', 'd', 'e', 'f', 4, 5, 'g', 'h']\n"
     ]
    }
   ],
   "source": [
    "list_5 = ['a', 'b', 'c', 'd', 'e']\n",
    "\n",
    "list_5.append('f')  # 使用 append() 方法\n",
    "print(list_5)\n",
    "\n",
    "list_5.insert(1, 5)  # 使用 insert() 方法\n",
    "print(list_5)\n",
    "\n",
    "list_5.extend([4, 5])  # 使用 extend() 方法\n",
    "print(list_5)\n",
    "\n",
    "list_5 = list_5 + ['g', 'h']  # 使用 + 操作符\n",
    "print(list_5)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.626326200Z",
     "start_time": "2023-12-09T15:50:51.572510500Z"
    }
   },
   "id": "680ac707c6479d4"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 修改列表元素：列表中的元素是可变的，可以通过索引来修改它们"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "8dea8a6217fefa23"
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['A', 'b', 'c', 'd', 'e']\n"
     ]
    }
   ],
   "source": [
    "list_6 = ['a', 'b', 'c', 'd', 'e']\n",
    "list_6[0] = 'A'\n",
    "\n",
    "print(list_6)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.697102800Z",
     "start_time": "2023-12-09T15:50:51.611379200Z"
    }
   },
   "id": "81daccd6b467d848"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 删除列表元素：可以使用 del 语句来删除列表的元素"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "1d23d3c7e69af3a1"
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['b', 'd', 'e']\n"
     ]
    }
   ],
   "source": [
    "list_7 = ['a', 'b', 'c', 'd', 'e']\n",
    "\n",
    "del list_7[0]\n",
    "list_7.remove(\"c\")  # 删除列表中第一个值为\"c\"的元素\n",
    "\n",
    "print(list_7)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.714037200Z",
     "start_time": "2023-12-09T15:50:51.689117800Z"
    }
   },
   "id": "52ed2b3fafcb45ee"
  },
  {
   "cell_type": "markdown",
   "source": [
    "## 元组\n",
    "\n",
    "元组（Tuple）与列表类似，不同之处在于元组的元素不能修改。元组写在小括号 () 里，元素之间用逗号隔开。"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "50ff3159e7d1f52a"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 元组的定义：在 Python 中，可以使用小括号 () 或者 tuple() 函数来定义一个元组。"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "fe5d8acd4973d0df"
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1, 2, 3)\n"
     ]
    }
   ],
   "source": [
    "# 使用小括号 () \n",
    "tuple_1 = (1, 2, 3)\n",
    "\n",
    "print(tuple_1)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.793767700Z",
     "start_time": "2023-12-09T15:50:51.717026500Z"
    }
   },
   "id": "dbba8c165dd0a029"
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1, 2, 3)\n"
     ]
    }
   ],
   "source": [
    "# 使用 tuple() 函数\n",
    "tuple_2 = tuple((1, 2, 3))\n",
    "\n",
    "print(tuple_2)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.831640900Z",
     "start_time": "2023-12-09T15:50:51.783802800Z"
    }
   },
   "id": "d7074e4aae3128b"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 元组的访问：通过索引来访问元组中的元素,索引从 0 开始，索引也可以使用负数，-1 表示列表的最后一个元素，-2 表示列表的倒数第二个元素"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "fd91d9f7511d829"
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n"
     ]
    }
   ],
   "source": [
    "tuple_3 = (1, 2, 3, 4, 5)\n",
    "\n",
    "print(tuple_3[0])\n",
    "print(tuple_3[1])"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.946257900Z",
     "start_time": "2023-12-09T15:50:51.835627700Z"
    }
   },
   "id": "cc1da97d73bc9c34"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 元组的元素不可修改，但可以对元组进行连接组合"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "9eec51712ad75c0c"
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n"
     ]
    }
   ],
   "source": [
    "tuple_4 = (1, 2, 3, 4, 5)\n",
    "tuple_5 = (6, 7, 8, 9, 10)\n",
    "\n",
    "tuple_6 = tuple_4 + tuple_5\n",
    "\n",
    "print(tuple_6)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.950245100Z",
     "start_time": "2023-12-09T15:50:51.894432500Z"
    }
   },
   "id": "7bee9d4203bbc04"
  },
  {
   "cell_type": "markdown",
   "source": [
    "## 字典\n",
    "\n",
    "在 Python 中，字典（Dictionary）是一种无序的、可变的数据类型，它由键（Key）和对应的值（Value）组成。"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "2c19bdc89bb3d2ef"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 字典的定义：可以使用大括号 {} 或者 dict() 函数来定义一个字典。"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "38df81c01c0e76e0"
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'key1': 'value1', 'key2': 'value2', 'key3': 'value3'}\n"
     ]
    }
   ],
   "source": [
    "# 使用大括号 {}\n",
    "dict_1 = {\"key1\": \"value1\", \"key2\": \"value2\", \"key3\": \"value3\"}\n",
    "\n",
    "print(dict_1)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:51.978152500Z",
     "start_time": "2023-12-09T15:50:51.955227900Z"
    }
   },
   "id": "1906438d8b5933ab"
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'key1': 'value1', 'key2': 'value2', 'key3': 'value3'}\n"
     ]
    }
   ],
   "source": [
    "# 使用 dict() 函数\n",
    "dict_2 = dict(key1=\"value1\", key2=\"value2\", key3=\"value3\")\n",
    "\n",
    "print(dict_2)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:52.018025100Z",
     "start_time": "2023-12-09T15:50:51.971175600Z"
    }
   },
   "id": "2eab14ed7a3028b4"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 字典的访问：通过键来访问字典中的值，如果指定的键不存在"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "ed604076da72f37d"
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "value1\n",
      "value2\n"
     ]
    }
   ],
   "source": [
    "dict_3 = {\"key1\": \"value1\", \"key2\": \"value2\", \"key3\": \"value3\"}\n",
    "\n",
    "print(dict_3[\"key1\"])\n",
    "print(dict_3[\"key2\"])"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:52.086787900Z",
     "start_time": "2023-12-09T15:50:52.021010700Z"
    }
   },
   "id": "9a4ed6c60c8efd0b"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 修改字典元素：字典中的元素是可变的，可以通过键来修改对应的值"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "2bdd89e7c8ef4d5a"
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'key1': 'new_value1', 'key2': 'value2', 'key3': 'value3'}\n"
     ]
    }
   ],
   "source": [
    "dict_4 = {\"key1\": \"value1\", \"key2\": \"value2\", \"key3\": \"value3\"}\n",
    "\n",
    "dict_4[\"key1\"] = \"new_value1\"\n",
    "print(dict_4)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:52.090776400Z",
     "start_time": "2023-12-09T15:50:52.042938600Z"
    }
   },
   "id": "e8f1b71f71ca7dec"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 增加字典元素：使用新的键值对来添加元素到字典中"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "6a29dabadc31b7e3"
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'key1': 'value1', 'key2': 'value2', 'key3': 'value3', 'key4': 'value4'}\n"
     ]
    }
   ],
   "source": [
    "dict_5 = {\"key1\": \"value1\", \"key2\": \"value2\", \"key3\": \"value3\"}\n",
    "\n",
    "dict_5[\"key4\"] = \"value4\"\n",
    "print(dict_5)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:52.102735400Z",
     "start_time": "2023-12-09T15:50:52.056888900Z"
    }
   },
   "id": "b18fe3b1fb27d1d7"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 删除字典元素：可以使用 del 语句来删除字典中的元素"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "422a22d25c1b1241"
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'key1': 'value1', 'key3': 'value3'}\n"
     ]
    }
   ],
   "source": [
    "dict_6 = {\"key1\": \"value1\", \"key2\": \"value2\", \"key3\": \"value3\"}\n",
    "\n",
    "del dict_6[\"key2\"]\n",
    "\n",
    "print(dict_6)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:52.163538100Z",
     "start_time": "2023-12-09T15:50:52.073831Z"
    }
   },
   "id": "14646b39babdbcef"
  },
  {
   "cell_type": "markdown",
   "source": [
    "## 集合\n",
    "\n",
    "集合（Set）是由一个或数个形态各异的大小整体组成的，构成集合的事物或对象称作元素或是成员。"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "cf8a7822b6bb0683"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 集合的定义：可以使用大括号 {} 或者 set() 函数来创建集合。"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "618b5b9edfab1555"
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'value3', 'value1', 'value2'}\n"
     ]
    }
   ],
   "source": [
    "# 使用大括号 {}\n",
    "set_1 = {\"value1\", \"value2\", \"value3\"}\n",
    "\n",
    "print(set_1)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:52.185464600Z",
     "start_time": "2023-12-09T15:50:52.094762400Z"
    }
   },
   "id": "b81f7269c5f5b8b1"
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'value3', 'value1', 'value2'}\n"
     ]
    }
   ],
   "source": [
    "# 使用 set() 函数\n",
    "set_2 = set((\"value1\", \"value2\", \"value3\"))\n",
    "\n",
    "print(set_2)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:52.236289800Z",
     "start_time": "2023-12-09T15:50:52.170508300Z"
    }
   },
   "id": "1ef4bd46f43f71a1"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 集合的访问：集合中的元素没有先后顺序，所以无法通过索引获取"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "4a2f9a68feaa9efa"
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "value3\n",
      "value1\n",
      "value2\n",
      "value1 exists in the set\n"
     ]
    }
   ],
   "source": [
    "# 使用循环迭代集合中的元素\n",
    "for element in set_3:\n",
    "    print(element)\n",
    "\n",
    "# 使用 in 关键字检查元素是否在集合中\n",
    "if \"value1\" in set_3:\n",
    "    print(\"value1 exists in the set\")"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:52.258214400Z",
     "start_time": "2023-12-09T15:50:52.201404600Z"
    }
   },
   "id": "fd30a0a6b6f0a243"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 集合的修改：集合中的元素是不可变的，所以无法修改集合中的元素"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "d7d65960c712d78e"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 集合的增加：可以使用 add() 方法来增加元素到集合中"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "ced1b3e51ef236c"
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'value4', 'value3', 'value1', 'value2'}\n"
     ]
    }
   ],
   "source": [
    "set_4 = {\"value1\", \"value2\", \"value3\"}\n",
    "\n",
    "set_4.add(\"value4\")\n",
    "\n",
    "print(set_4)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:52.317019800Z",
     "start_time": "2023-12-09T15:50:52.244261400Z"
    }
   },
   "id": "fdb809ae661983b1"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 集合的删除：可以使用 remove() 方法来删除集合中的元素"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "d99ed89326bf3dbc"
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'value3', 'value1'}\n"
     ]
    }
   ],
   "source": [
    "set_5 = {\"value1\", \"value2\", \"value3\"}\n",
    "\n",
    "set_5.remove(\"value2\")\n",
    "\n",
    "print(set_5)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:52.385094500Z",
     "start_time": "2023-12-09T15:50:52.307051700Z"
    }
   },
   "id": "9388005115806bff"
  },
  {
   "cell_type": "markdown",
   "source": [
    "- 集合的运算：\n",
    "1) 交集 &"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "26999506d979899d"
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'value1', 'value3'}\n"
     ]
    }
   ],
   "source": [
    "set_6 = {\"value1\", \"value2\", \"value3\"}\n",
    "\n",
    "set_7 = {\"value1\", \"value3\", \"value5\"}\n",
    "\n",
    "print(set_6 & set_7)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:52.388076500Z",
     "start_time": "2023-12-09T15:50:52.329981500Z"
    }
   },
   "id": "2c62edeff94eedc0"
  },
  {
   "cell_type": "markdown",
   "source": [
    "2) 并集 |"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "a9179729089e2b1c"
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'value1', 'value5', 'value2', 'value3'}\n"
     ]
    }
   ],
   "source": [
    "set_8 = {\"value1\", \"value2\", \"value3\"}\n",
    "\n",
    "set_9 = {\"value1\", \"value3\", \"value5\"}\n",
    "\n",
    "print(set_8 | set_9)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:52.401030700Z",
     "start_time": "2023-12-09T15:50:52.347687100Z"
    }
   },
   "id": "e7f4c912963c537"
  },
  {
   "cell_type": "markdown",
   "source": [
    "3) 差集 -"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "f255926299913218"
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'value2'}\n"
     ]
    }
   ],
   "source": [
    "set_10 = {\"value1\", \"value2\", \"value3\"}\n",
    "\n",
    "set_11 = {\"value1\", \"value3\", \"value5\"}\n",
    "\n",
    "print(set_10 - set_11)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:52.465817300Z",
     "start_time": "2023-12-09T15:50:52.393059700Z"
    }
   },
   "id": "ce5207f5a124880b"
  },
  {
   "cell_type": "markdown",
   "source": [
    "4) 子集 <"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "28a4eec93b790d99"
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n"
     ]
    }
   ],
   "source": [
    "set_12 = {\"value1\", \"value2\", \"value3\"}\n",
    "\n",
    "set_13 = {\"value1\", \"value3\", \"value5\"}\n",
    "\n",
    "print(set_12 < set_13)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-12-09T15:50:52.479775600Z",
     "start_time": "2023-12-09T15:50:52.456845400Z"
    }
   },
   "id": "e69a92524b451cdd"
  },
  {
   "cell_type": "markdown",
   "source": [
    "## 列表、字典、元组和集合对比\n",
    "\n",
    "是 Python 中常用的数据结构，它们有不同的特点和用途。下面是它们的相同点和差异：\n",
    "\n",
    "相同点：\n",
    "1. 都可以用于存储和组织数据。\n",
    "2. 都可以通过索引或键值访问和修改其中的元素或值。\n",
    "3. 都可以进行迭代操作。\n",
    "\n",
    "差异：\n",
    "1. 列表（List）：\n",
    "   - 使用方括号 [] 定义。\n",
    "   - 允许存储重复的元素。\n",
    "   - 是有序的，可以通过索引访问元素。\n",
    "   - 可以进行切片操作，获取子列表。\n",
    "   - 可以修改、添加和删除元素。\n",
    "\n",
    "2. 字典（Dictionary）：\n",
    "   - 使用花括号 {} 定义，其中每个元素都包含一个键值对。\n",
    "   - 键值对之间没有固定顺序。\n",
    "   - 键必须是唯一的，而值可以重复。\n",
    "   - 通过键来访问和修改值。\n",
    "   - 可以动态地添加、修改和删除键值对。\n",
    "\n",
    "3. 元组（Tuple）：\n",
    "   - 使用圆括号 () 或者省略括号定义。\n",
    "   - 元素之间用逗号分隔。\n",
    "   - 不可修改（immutable），即创建后不能添加、修改或删除元素。\n",
    "   - 可以通过索引访问元素。\n",
    "   - 通常用于存储不可变的数据。\n",
    "\n",
    "4. 集合（Set）：\n",
    "   - 使用花括号 {} 或者 set() 函数定义。\n",
    "   - 不允许存储重复的元素。\n",
    "   - 元素之间没有固定顺序。\n",
    "   - 可以进行交集、并集、差集等集合操作。\n",
    "   - 可以动态地添加和删除元素。\n",
    "\n",
    "列表适用于有序的、可变的元素集合；\n",
    "字典适用于键值对的映射关系；\n",
    "元组适用于不可变的元素集合；\n",
    "集合适用于去重和集合操作。"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "91c286719356cbae"
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
